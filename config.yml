variables: my_secrets.yml

templates:

##### Series config
#
  series:
    thetvdb_lookup: yes
    tvmaze_lookup: yes
    include: series.yml
    configure_series:
      from:
        #filesystem: "{? folder.root ?}{? folder.downseries ?} 
        entry_list: trakt-series
      settings:
        identified_by: ep
        #timeframe: 16 hours
        #target: hdtv+ 720p
        #quality: webrip+ 720p
        #propers: 16 hours
        #specials: no
    content_size:
      min: 350
    content_filter:
      require:
        - '*.mkv'

##### ADVANCED SETTINGS #####

##### Global config
#
  global:
    no_entries_ok: yes
    pathscrub: windows
    
##### Disable builtins for some tasks
#
  disable-seen-retry:
    disable:
      - seen
      - seen_info_hash
      - retry_failed

##### Series metainfo mainly for move and update tasks
#
  series-metainfo:
    metainfo_series: yes
    thetvdb_lookup: yes
    require_field: series_name

##### Guessit parsing for some series tasks, not applied to all tasks because it causes issues with "name (year)" based series, like scandal
#
  series-guessit:
    parsing:
      series: guessit


tasks:

########## SERIES ##########

##### Populates the series database with the files on the library, to avoid duplicate downloads
#
  populate-series-db:
    priority: 1
    template:
      - series-metainfo
    #seen: local
    filesystem:
      path: "/{? folder.root ?}{? folder.series ?}"
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    accept_all: yes
    configure_series:
      from:
        filesystem:
          path: "/{? folder.root ?}{? folder.series ?}"
          retrieve: dirs
      settings:
        tracking: no


##### Fetch, format and output trakt series list to a custom entry list
#
  fill-series-list:
    priority: 2
    template:
      - disable-seen-retry
      - series-metainfo
    list_clear:
      what:
        - entry_list: trakt-series
    accept_all: yes
    set:
      title: "{{tvdb_series_name|escape|replace('&#39;', '')}}"
    list_add:
      - entry_list: trakt-series

########## LIBRARY ##########

##### Move series from downloads folder to respective folders, along with existing subtitles and adding the files to the subtitle queue
#
  move-series:
    priority: 3
    template:
      - disable-seen-retry
      - series-metainfo
     #- pushbullet
    filesystem:
      path:
        - "/{? folder.root ?}{? folder.downseries ?}"
      #  - "/{? folder.root ?}{? folder.downmanual ?}"
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    accept_all: yes
    move:
      to: "/{? folder.root ?}{? folder.series ?}{{tvdb_series_name|escape|replace('&#39;', '')|default(tvdb_series_name)|pathscrub}}/S{{tvdb_season|pad(2)}}/"
      rename: "{{tvdb_series_name|escape|replace('&#39;', '')|default(tvdb_series_name)|pathscrub}} - {{tvdb_ep_id|default(series_id)}}{% if tvdb_ep_name|default(False) %} - {{tvdb_ep_name|pathscrub}}{% endif %}{% if quality|default(False) %} - [{{quality}}]{% endif %}"
      along:
        extensions:
          - srt
          - sub
        subdirs:
          - Subs
      #clean_source: 50
    regexp:
      reject:
        - rarbg.mp4
    list_add:
      - subtitle_list:
          list: subtitles
          path: "{{location}}"
          remove_after: 7 days
   # kodi_library:
   #   action: scan
   #   category: video
   #   url: http://192.168.254.8
   #   port: 8080
   # exec:
   #   on_exit:
   #     phase: find "/{? folder.root ?}{? folder.downseries ?}"* -type d -empty -delete

########## UPDATES ##########

##### Update trakt series list from local series folders, excluding the ones that already ended
#
  update-series-list:
    priority: 51
    template:
      - disable-seen-retry
      - series-metainfo
    filesystem:
      path: "/{? folder.root ?}{? folder.downseries ?}"
      retrieve: dirs
    manipulate:
      - title:
          replace:
            regexp: '$'
            format: ' S01E01'
    accept_all: yes
    #if:
    #  - tvdb_status == 'Ended': reject
    list_add:
      - trakt_list:
          account: "{? trakt.account ?}"
          list: "{? trakt.series ?}"
          type: shows

